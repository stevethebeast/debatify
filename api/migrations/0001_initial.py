# Generated by Django 3.1.2 on 2020-11-12 20:30

import api.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', api.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Argument',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('TITLE', models.CharField(max_length=200)),
                ('TEXT', models.CharField(blank=True, max_length=600, null=True)),
                ('SCORE', models.IntegerField(blank=True, null=True)),
                ('SIDE', models.CharField(max_length=3)),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('CONTACT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Counter_argument',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('TITLE', models.CharField(max_length=200)),
                ('TEXT', models.CharField(blank=True, max_length=600, null=True)),
                ('SCORE', models.IntegerField(blank=True, null=True)),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('ARGUMENT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.argument')),
                ('CONTACT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Debate',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('NAME', models.CharField(max_length=60)),
                ('YES_TITLE', models.CharField(max_length=100)),
                ('NO_TITLE', models.CharField(max_length=100)),
                ('CONTEXT', models.CharField(blank=True, max_length=1000, null=True)),
                ('PHOTO_PATH', models.CharField(blank=True, max_length=150, null=True)),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('CREATOR_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='argument',
            name='DEBATE_ID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.debate'),
        ),
        migrations.CreateModel(
            name='Voting_right',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('CONTACT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('DEBATE_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.debate')),
            ],
            options={
                'unique_together': {('DEBATE_ID', 'CONTACT_ID')},
            },
        ),
        migrations.CreateModel(
            name='Debate_vote',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('SIDE', models.CharField(max_length=3)),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('CONTACT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('DEBATE_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.debate')),
            ],
            options={
                'unique_together': {('DEBATE_ID', 'CONTACT_ID')},
            },
        ),
        migrations.CreateModel(
            name='Counter_argument_vote',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('LIKE', models.IntegerField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('CONTACT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('COUNTER_ARGUMENT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.counter_argument')),
            ],
            options={
                'unique_together': {('COUNTER_ARGUMENT_ID', 'CONTACT_ID')},
            },
        ),
        migrations.CreateModel(
            name='Argument_vote',
            fields=[
                ('ID', models.AutoField(primary_key=True, serialize=False)),
                ('LIKE', models.IntegerField()),
                ('CREATED_AT', models.DateTimeField(auto_now_add=True)),
                ('ARGUMENT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.argument')),
                ('CONTACT_ID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('ARGUMENT_ID', 'CONTACT_ID')},
            },
        ),
    ]
